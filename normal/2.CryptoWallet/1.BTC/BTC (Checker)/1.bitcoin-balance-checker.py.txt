#Compatible with Python 2 and Python 3
#Based and improved implementation, inspired by: github.com/circulosmeos/bitcoin-in-tiny-pieces/blob/master/bitcoin-get-address-balance.py
#Developed by: ~geniusprodigy
#https://github.com/geniusprodigy/bitcoin-balance-checker
#Инструмент проверяет баланс для большого количества адресов
#Создайте или отредактируйте list-addresses.txt и замените образец файла каталога, указав свои адреса биткойнов, по одному в строке.
#При желании вы можете отредактировать имя файла, распознаваемое кодом в строке 87 скрипта. Отредактируйте и введите желаемое имя, чтобы программа прочитала этот файл.
#ПОЛУЧЕННЫЕ РЕЗУЛЬТАТЫ
#При обнаружении адреса с балансом вы услышите 3 звуковых сигнала колокольчика.
#Это предупреждение, которое вы можете отключить, если хотите, просто измените значение True на False в строке 21 исходного кода.

#Ps: 10 самых ценных (старых) биткойн-адресов в истории были использованы в качестве примера для проверки.
#На выходе получается файл address-with-balance-yay.txt.
#Этот файл содержит все биткойн-адреса, баланс которых был найден при сканировании.
#Он сортируется по адресу, а остаток впереди уже сформирован в единице биткойнов по умолчанию.



import sys
import re
from time import sleep



from rich.console import Console

# Create console instance and clear
console = Console()




try:    # if is python3
    from urllib.request import urlopen
except: # if is python2
    from urllib2 import urlopen



def check_balance(address):

    #Modify the value of the variable below to False if you do not want Bell Sound when the Software finds balance.
    SONG_BELL = True

    #Add time different of 0 if you need more security on the checks
    WARN_WAIT_TIME = 0

    blockchain_tags_json = [ 
        'total_received',
        'final_balance',
        ]

    SATOSHIS_PER_BTC = 1e+8

    check_address = address

    parse_address_structure = re.match(r' *([a-zA-Z1-9]{1,34})', check_address)
    if ( parse_address_structure is not None ):
        check_address = parse_address_structure.group(1)
    else:
        print( "\nThis Bitcoin Address is invalid" + check_address )
        exit(1)


    #Read info from Blockchain about the Address
    reading_state=1
    while (reading_state):
        try:
            htmlfile = urlopen("https://blockchain.info/address/%s?format=json" % check_address, timeout = 10)
            htmltext = htmlfile.read().decode('utf-8')
            reading_state  = 0
        except:
            reading_state+=1
            print( "Checking... " + str(reading_state) )
            sleep(60*reading_state)
    console.print( f"[cyan bold]\nBitcoin Address = {check_address} [/cyan bold]")


    blockchain_info_array = []
    tag = ''
    try:
        for tag in blockchain_tags_json:
            blockchain_info_array.append (
                float( re.search( r'%s":(\d+),' % tag, htmltext ).group(1) ) )
    except:
        print( "Error '%s'." % tag );
        exit(1)

    for i, btc_tokens in enumerate(blockchain_info_array):
        sys.stdout.write ("%s \t= " % blockchain_tags_json[i])
        if btc_tokens > 0.0:
            console.print( "[green]  %.8f Bitcoin [/green] " % (btc_tokens/SATOSHIS_PER_BTC) );
        else:
            console.print( "[red bold] 0 Bitcoin [/red bold]" );

        if (SONG_BELL and blockchain_tags_json[i] == 'final_balance' and btc_tokens > 0.0): 
            
            #If you have a balance greater than 0 you will hear the bell
            sys.stdout.write ('\a\a\a')
            sys.stdout.flush()

            arq1.write("Bitcoin Address: %s" % check_address)
            arq1.write("\t Balance: %.8f Bitcoin" % (btc_tokens/SATOSHIS_PER_BTC))
            arq1.write("\n")
            arq1.close()
            if (WARN_WAIT_TIME > 0):
                sleep(WARN_WAIT_TIME)




#Add the filename of your list of Bitcoin Addresses for check all.
while True:
    with open("1.list-addresses.txt") as file:
            for line in file:
                arq1 = open('2.addresses-with-balance-yay.txt', 'a')
                address = str.strip(line)
                check_balance(address)
    print(" ")            
    console.print("[cyan bold]====================================================[/cyan bold]")
    sleep(30)
arq1.close()



#[green][+][/green] 
#[yellow bold][+][/yellow bold]